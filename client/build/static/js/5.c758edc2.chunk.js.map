{"version":3,"sources":["pages/auth/styles.module.scss","pages/auth/index.jsx"],"names":["module","exports","Auth","isLogin","useRouteMatch","path","Form","useForm","form","authorized","useSelector","state","auth","dispatch","useDispatch","to","className","css","onFinish","values","performLogin","performSignup","Item","name","rules","required","min","placeholder","validator","validatePassword","Password","justify","htmlType","type"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,YAAY,4B,kKC2DfC,UApDf,WACI,IAAMC,EAAUC,YAAc,CAAEC,KAAM,WAD1B,EAEGC,IAAKC,UAAbC,EAFK,oBAGNC,EAAaC,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKH,cAC/CI,EAAWC,cAUjB,OAAIL,EACO,cAAC,IAAD,CAAUM,GAAG,MAIpB,sBAAKC,UAAWC,IAAI,aAApB,UACI,6BAAKd,EAAU,QAAU,WACzB,eAAC,IAAD,CAAMK,KAAMA,EAAMU,SAfL,SAACC,GAEdN,EADAV,EACSiB,YAAaD,GAEbE,YAAcF,KAWvB,UACI,cAAC,IAAKG,KAAN,CAAWC,KAAK,WAAWC,MAAO,CAAC,CAAEC,UAAU,EAAMC,IAAK,IAA1D,SACI,cAAC,IAAD,CAAOC,YAAY,eAEvB,cAAC,IAAKL,KAAN,CACIC,KAAK,WACLC,MAAO,CAAC,CAAEI,UAAWC,MAFzB,SAII,cAAC,IAAMC,SAAP,CAAgBH,YAAY,eAEhC,cAAC,IAAD,CAAKI,QAAQ,SAAb,SACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAQC,SAAS,SAASC,KAAK,UAA/B,wBAKR,cAAC,IAAD,CAAKF,QAAQ,SAAb,SACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAMhB,GAAIZ,EAAU,UAAY,SAAhC,SACKA,EACK,yBACA","file":"static/js/5.c758edc2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth-page\":\"styles_auth-page__GSryU\"};","import { Redirect, useRouteMatch, Link } from 'react-router-dom';\r\nimport { Form, Input, Button, Row, Col } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { performLogin, performSignup } from '../../redux/auth/actions';\r\nimport { validatePassword } from '../../utils';\r\nimport css from './styles.module.scss';\r\n\r\nfunction Auth() {\r\n    const isLogin = useRouteMatch({ path: '/login' });\r\n    const [form] = Form.useForm();\r\n    const authorized = useSelector((state) => state.auth.authorized);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleSubmit = (values) => {\r\n        if (isLogin) {\r\n            dispatch(performLogin(values));\r\n        } else {\r\n            dispatch(performSignup(values));\r\n        }\r\n    };\r\n\r\n    if (authorized) {\r\n        return <Redirect to='/' />;\r\n    }\r\n\r\n    return (\r\n        <div className={css['auth-page']}>\r\n            <h2>{isLogin ? 'Login' : 'Signup'}</h2>\r\n            <Form form={form} onFinish={handleSubmit}>\r\n                <Form.Item name='username' rules={[{ required: true, min: 8 }]}>\r\n                    <Input placeholder='Username' />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name='password'\r\n                    rules={[{ validator: validatePassword }]}\r\n                >\r\n                    <Input.Password placeholder='Password' />\r\n                </Form.Item>\r\n                <Row justify='center'>\r\n                    <Col>\r\n                        <Button htmlType='submit' type='primary'>\r\n                            Submit\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n                <Row justify='center'>\r\n                    <Col>\r\n                        <Link to={isLogin ? '/signup' : '/login'}>\r\n                            {isLogin\r\n                                ? \"Don't have an account?\"\r\n                                : 'Already a member?'}\r\n                        </Link>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Auth;\r\n"],"sourceRoot":""}