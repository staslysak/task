{"version":3,"sources":["redux/auth/types.js","components/app-loader/index.jsx","components/auth-route/index.jsx","layouts/app-layout/index.jsx","App.jsx","reportWebVitals.js","index.js","utils/jwt.js","utils/validator.js","redux/auth/reducer.js","redux/index.js","store.js","api.js","redux/auth/actions.js","layouts/app-layout/styles.module.scss"],"names":["TODO_TYPES","login","logout","updateUserJob","createUserJob","deleteUserJob","AppLoader","align","justify","AuthRoute","forceProtect","fallback","props","authorized","useSelector","state","auth","to","AppLayout","children","dispatch","useDispatch","user","useEffect","username","getSelf","className","css","Header","type","danger","onClick","logoutAction","Content","routes","path","exact","component","lazy","App","map","Component","route","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","store","document","getElementById","getToken","prefix","token","localStorage","getItem","setToken","setItem","removeToken","removeItem","passwordValidatorSchema","PasswordValidator","has","uppercase","is","min","lowercase","digits","not","spaces","validatePassword","rule","value","callback","errors","validate","list","includes","DEFAULT_STATE","jobs","combineReducers","payload","TYPES","reverse","job","_id","filter","middleware","thunk","createStore","reducers","applyMiddleware","api","axios","create","baseURL","interceptors","response","use","res","data","err","status","Promise","reject","notification","error","message","description","loginAction","performLogin","post","accessToken","performSignup","get","headers","authorization","createJob","updateJob","put","deleteJob","jobId","delete","module","exports"],"mappings":"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","file":"static/js/main.5eddb454.chunk.js","sourcesContent":["export const TODO_TYPES = {\r\n    login: 'AUTH_LOGIN',\r\n    logout: 'AUTH_LOGOUT',\r\n    updateUserJob: 'USER_UPDATE_JOB',\r\n    createUserJob: 'USER_CREATE_JOB',\r\n    deleteUserJob: 'USER_DELETE_JOB',\r\n};\r\n","import { Spin, Row } from 'antd';\r\n\r\nexport const AppLoader = () => {\r\n    return (\r\n        <Row align='center' justify='center'>\r\n            <Spin />\r\n        </Row>\r\n    );\r\n};\r\n","import { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport const AuthRoute = ({\r\n    forceProtect = true,\r\n    fallback = '/login',\r\n    ...props\r\n}) => {\r\n    const authorized = useSelector((state) => state.auth.authorized);\r\n\r\n    return forceProtect ? (\r\n        authorized ? (\r\n            <Route {...props} />\r\n        ) : (\r\n            <Redirect to={fallback} />\r\n        )\r\n    ) : (\r\n        <Route {...props} />\r\n    );\r\n};\r\n","import { useEffect } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { Layout, Button, Row, Col, Space } from 'antd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { logoutAction, getSelf } from '../../redux/auth/actions';\r\nimport css from './styles.module.scss';\r\n\r\nexport function AppLayout({ children }) {\r\n    const dispatch = useDispatch();\r\n    const authorized = useSelector((state) => state.auth.authorized);\r\n    const user = useSelector((state) => state.auth.user);\r\n\r\n    const handleLogout = () => {\r\n        dispatch(logoutAction());\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (authorized && !user?.username) {\r\n            dispatch(getSelf());\r\n        }\r\n    }, [authorized, user]);\r\n\r\n    return (\r\n        <Layout className={css['app-layout']}>\r\n            {authorized && (\r\n                <Layout.Header>\r\n                    <Row justify='space-between' align='center'>\r\n                        <Col>\r\n                            <Link to='/add'>\r\n                                <Button type='primary'>Add job</Button>\r\n                            </Link>\r\n                        </Col>\r\n                        <Col>\r\n                            <Button\r\n                                danger\r\n                                type='primary'\r\n                                onClick={handleLogout}\r\n                            >\r\n                                Logout\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Layout.Header>\r\n            )}\r\n            <Layout.Content className={css['app-layout-content']}>\r\n                {children}\r\n            </Layout.Content>\r\n        </Layout>\r\n    );\r\n}\r\n","import { Suspense, lazy } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { AppLoader, AuthRoute } from './components';\nimport { AppLayout } from './layouts';\n\nimport 'antd/dist/antd.css';\n\nconst routes = [\n    {\n        path: '/(login|signup)',\n        exact: true,\n        component: lazy(() => import('./pages/auth')),\n        forceProtect: false,\n    },\n    {\n        path: '/',\n        exact: false,\n        component: lazy(() => import('./pages/home')),\n    },\n];\n\nfunction App() {\n    return (\n        <AppLayout>\n            <Switch>\n                {routes.map(({ component: Component, ...route }) => (\n                    <AuthRoute key={route.path} {...route}>\n                        <Suspense fallback={<AppLoader />}>\n                            <Component />\n                        </Suspense>\n                    </AuthRoute>\n                ))}\n                <Route key='*' path='*'>\n                    <Redirect to='/' />\n                </Route>\n            </Switch>\n        </AppLayout>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider as ReduxProvider } from 'react-redux';\n\nimport App from './App';\nimport store from './store';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router>\n            <ReduxProvider store={store}>\n                <App />\n            </ReduxProvider>\n        </Router>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const getToken = (prefix) => {\r\n    const token = localStorage.getItem('_token');\r\n    return prefix ? `${prefix} ${token}` : token;\r\n};\r\n\r\nexport const setToken = (token) => {\r\n    localStorage.setItem('_token', token);\r\n};\r\n\r\nexport const removeToken = () => {\r\n    localStorage.removeItem('_token');\r\n};\r\n","import PasswordValidator from 'password-validator';\r\n\r\nexport const passwordValidatorSchema = new PasswordValidator()\r\n    .has()\r\n    .uppercase()\r\n    .is()\r\n    .min(8)\r\n    .has()\r\n    .lowercase()\r\n    .has()\r\n    .digits()\r\n    .has()\r\n    .not()\r\n    .spaces();\r\n\r\nexport const validatePassword = (rule, value, callback) => {\r\n    const errors = passwordValidatorSchema.validate(value, { list: true });\r\n\r\n    if (errors.includes('min'))\r\n        return callback('password must be at least 8 letters');\r\n    if (errors.includes('uppercase'))\r\n        return callback('password must have uppercase letters');\r\n    if (errors.includes('lowercase'))\r\n        return callback('password must have lowercase letters');\r\n    if (errors.includes('digits'))\r\n        return callback('password must have digits');\r\n    if (errors.includes('spaces'))\r\n        return callback('password must not indent spaces');\r\n    return callback();\r\n};\r\n","import { TODO_TYPES as TYPES } from './types';\r\nimport { getToken } from '../../utils';\r\n\r\nconst DEFAULT_STATE = {\r\n    user: {\r\n        username: '',\r\n        jobs: [],\r\n    },\r\n    authorized: getToken() ?? false,\r\n};\r\n\r\nexport default (state = DEFAULT_STATE, { type, payload }) => {\r\n    switch (type) {\r\n        case TYPES.login:\r\n            return {\r\n                ...state,\r\n                authorized: true,\r\n                user: {\r\n                    ...payload,\r\n                    jobs: payload.jobs.reverse(),\r\n                },\r\n            };\r\n        case TYPES.logout:\r\n            return {\r\n                ...state,\r\n                authorized: false,\r\n                user: {},\r\n            };\r\n        case TYPES.createUserJob:\r\n            return {\r\n                ...state,\r\n                user: {\r\n                    ...state.user,\r\n                    jobs: [payload, ...state.user.jobs],\r\n                },\r\n            };\r\n        case TYPES.updateUserJob:\r\n            return {\r\n                ...state,\r\n                user: {\r\n                    ...state.user,\r\n                    jobs: state.user.jobs.map((job) =>\r\n                        job._id === payload._id ? { ...job, ...payload } : job\r\n                    ),\r\n                },\r\n            };\r\n        case TYPES.deleteUserJob:\r\n            return {\r\n                ...state,\r\n                user: {\r\n                    ...state.user,\r\n                    jobs: state.user.jobs.filter((job) => job._id !== payload),\r\n                },\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport authReducer from './auth/reducer';\r\n\r\nexport default combineReducers({\r\n    auth: authReducer,\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducers from './redux';\r\n\r\nconst middleware = [thunk];\r\nconst store = createStore(reducers, applyMiddleware(...middleware));\r\n\r\nexport default store;\r\n","import axios from 'axios';\r\nimport { notification } from 'antd';\r\n\r\nimport store from './store';\r\nimport { logoutAction } from './redux/auth/actions';\r\n\r\nconst api = axios.create({\r\n    baseURL: '/api',\r\n});\r\n\r\napi.interceptors.response.use(\r\n    (res) => {\r\n        return res.data;\r\n    },\r\n    (err) => {\r\n        if (err.response.status === 403) {\r\n            store.dispatch(logoutAction());\r\n            return Promise.reject(err);\r\n        }\r\n\r\n        notification.error({\r\n            message: 'Error',\r\n            description: err.response.data.message,\r\n        });\r\n\r\n        return Promise.reject(err);\r\n    }\r\n);\r\n\r\nexport default api;\r\n","import { TODO_TYPES as TYPES } from './types';\r\nimport api from '../../api';\r\nimport { getToken, setToken, removeToken } from '../../utils';\r\n\r\nconst loginAction = (payload) => ({ type: TYPES.login, payload });\r\n\r\nconst createJobAction = (payload) => ({ type: TYPES.createUserJob, payload });\r\nconst updateJobAction = (payload) => ({ type: TYPES.updateUserJob, payload });\r\nconst deleteJobAction = (payload) => ({ type: TYPES.deleteUserJob, payload });\r\n\r\nexport const performLogin = (data) => (dispatch) => {\r\n    api.post('/login', data).then((res) => {\r\n        setToken(res.accessToken);\r\n        dispatch(loginAction(res.user));\r\n    });\r\n};\r\n\r\nexport const performSignup = (data) => (dispatch) => {\r\n    api.post('/signup', data).then((res) => {\r\n        setToken(res.accessToken);\r\n        dispatch(loginAction(res.user));\r\n    });\r\n};\r\n\r\nexport const logoutAction = () => (dispatch) => {\r\n    removeToken();\r\n    dispatch({ type: TYPES.logout });\r\n};\r\n\r\nexport const getSelf = () => (dispatch) => {\r\n    api.get('/user', {\r\n        headers: {\r\n            authorization: getToken('Bearer'),\r\n        },\r\n    }).then((res) => {\r\n        dispatch(loginAction(res));\r\n    });\r\n};\r\n\r\nexport const createJob = (data) => (dispatch) => {\r\n    api.post('/user/job', data, {\r\n        headers: {\r\n            authorization: getToken('Bearer'),\r\n        },\r\n    }).then((res) => {\r\n        dispatch(createJobAction(res));\r\n    });\r\n};\r\n\r\nexport const updateJob = (data) => (dispatch) => {\r\n    api.put('/user/job', data, {\r\n        headers: {\r\n            authorization: getToken('Bearer'),\r\n        },\r\n    }).then((res) => {\r\n        dispatch(updateJobAction(res));\r\n    });\r\n};\r\n\r\nexport const deleteJob = (jobId) => (dispatch) => {\r\n    api.delete(`/user/job/${jobId}`, {\r\n        headers: {\r\n            authorization: getToken('Bearer'),\r\n        },\r\n    }).then((res) => {\r\n        dispatch(deleteJobAction(res));\r\n    });\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app-layout\":\"styles_app-layout__3WT_1\",\"app-layout-content\":\"styles_app-layout-content__3Hppm\"};"],"sourceRoot":""}